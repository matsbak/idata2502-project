name: Docker Build CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
    steps:
    # Checks out the repository this file is in
    - uses: actions/checkout@v4

    # Builds a container testing environment
    # WARNING! The rest of this workflow will execute ONLY if tests pass
    - name: Build test containers
      id: test
      run: |
        docker compose -f compose.test.yaml up --build --abort-on-container-exit backend-test
        TEST_EXIT_CODE=$?
        docker compose down
        if [ TEST_EXIT_CODE -ne 0 ]; then
          exit 1
        fi

    # Builds a container environment
    - name: Build application containers
      id: build
      run: docker compose -f compose.test.yaml up -d frontend backend db

    # Stops the container environment
    - name: Stop application containers
      id: stop
      if: always()
      run: docker compose down

    # Signs in to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # Builds and pushes the frontend image
    - name: Build and push frontend
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest ./frontend
        docker push {{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest
    

    # Builds and pushes the backend image
    - name: Build and push backend
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todoapp-api:latest ./backend
        docker push {{ secrets.DOCKERHUB_USERNAME }}/todoapp-api:latest
